{"your_expr":
 {"forallE":
  {"body":
   {"forallE":
    {"body":
     {"forallE":
      {"body":
       {"app":
        {"fn":
         {"app":
          {"fn":
           {"app":
            {"fn":
             {"const":
              {"us": ["Lean.Level.succ (Lean.Level.zero)"], "declName": "Eq"}},
             "arg": {"const": {"us": [], "declName": "Nat"}}}},
           "arg":
           {"app":
            {"fn":
             {"app":
              {"fn":
               {"app":
                {"fn":
                 {"app":
                  {"fn":
                   {"app":
                    {"fn":
                     {"app":
                      {"fn":
                       {"const":
                        {"us":
                         ["Lean.Level.zero",
                          "Lean.Level.zero",
                          "Lean.Level.zero"],
                         "declName": "HMul.hMul"}},
                       "arg": {"const": {"us": [], "declName": "Nat"}}}},
                     "arg": {"const": {"us": [], "declName": "Nat"}}}},
                   "arg": {"const": {"us": [], "declName": "Nat"}}}},
                 "arg":
                 {"app":
                  {"fn":
                   {"app":
                    {"fn":
                     {"const":
                      {"us": ["Lean.Level.zero"], "declName": "instHMul"}},
                     "arg": {"const": {"us": [], "declName": "Nat"}}}},
                   "arg": {"const": {"us": [], "declName": "instMulNat"}}}}}},
               "arg":
               {"app":
                {"fn":
                 {"app":
                  {"fn":
                   {"app":
                    {"fn":
                     {"app":
                      {"fn":
                       {"app":
                        {"fn":
                         {"app":
                          {"fn":
                           {"const":
                            {"us":
                             ["Lean.Level.zero",
                              "Lean.Level.zero",
                              "Lean.Level.zero"],
                             "declName": "HMul.hMul"}},
                           "arg": {"const": {"us": [], "declName": "Nat"}}}},
                         "arg": {"const": {"us": [], "declName": "Nat"}}}},
                       "arg": {"const": {"us": [], "declName": "Nat"}}}},
                     "arg":
                     {"app":
                      {"fn":
                       {"app":
                        {"fn":
                         {"const":
                          {"us": ["Lean.Level.zero"], "declName": "instHMul"}},
                         "arg": {"const": {"us": [], "declName": "Nat"}}}},
                       "arg":
                       {"const": {"us": [], "declName": "instMulNat"}}}}}},
                   "arg": {"bvar": {"deBruijnIndex": 0}}}},
                 "arg": {"bvar": {"deBruijnIndex": 1}}}}}},
             "arg": {"bvar": {"deBruijnIndex": 2}}}}}},
         "arg":
         {"app":
          {"fn":
           {"app":
            {"fn":
             {"app":
              {"fn":
               {"app":
                {"fn":
                 {"app":
                  {"fn":
                   {"app":
                    {"fn":
                     {"const":
                      {"us":
                       ["Lean.Level.zero",
                        "Lean.Level.zero",
                        "Lean.Level.zero"],
                       "declName": "HMul.hMul"}},
                     "arg": {"const": {"us": [], "declName": "Nat"}}}},
                   "arg": {"const": {"us": [], "declName": "Nat"}}}},
                 "arg": {"const": {"us": [], "declName": "Nat"}}}},
               "arg":
               {"app":
                {"fn":
                 {"app":
                  {"fn":
                   {"const":
                    {"us": ["Lean.Level.zero"], "declName": "instHMul"}},
                   "arg": {"const": {"us": [], "declName": "Nat"}}}},
                 "arg": {"const": {"us": [], "declName": "instMulNat"}}}}}},
             "arg": {"bvar": {"deBruijnIndex": 1}}}},
           "arg":
           {"app":
            {"fn":
             {"app":
              {"fn":
               {"app":
                {"fn":
                 {"app":
                  {"fn":
                   {"app":
                    {"fn":
                     {"app":
                      {"fn":
                       {"const":
                        {"us":
                         ["Lean.Level.zero",
                          "Lean.Level.zero",
                          "Lean.Level.zero"],
                         "declName": "HMul.hMul"}},
                       "arg": {"const": {"us": [], "declName": "Nat"}}}},
                     "arg": {"const": {"us": [], "declName": "Nat"}}}},
                   "arg": {"const": {"us": [], "declName": "Nat"}}}},
                 "arg":
                 {"app":
                  {"fn":
                   {"app":
                    {"fn":
                     {"const":
                      {"us": ["Lean.Level.zero"], "declName": "instHMul"}},
                     "arg": {"const": {"us": [], "declName": "Nat"}}}},
                   "arg": {"const": {"us": [], "declName": "instMulNat"}}}}}},
               "arg": {"bvar": {"deBruijnIndex": 2}}}},
             "arg": {"bvar": {"deBruijnIndex": 0}}}}}}}},
       "binderType": {"const": {"us": [], "declName": "Nat"}},
       "binderName": "c",
       "binderInfo": "Lean.BinderInfo.default"}},
     "binderType": {"const": {"us": [], "declName": "Nat"}},
     "binderName": "b",
     "binderInfo": "Lean.BinderInfo.default"}},
   "binderType": {"const": {"us": [], "declName": "Nat"}},
   "binderName": "a",
   "binderInfo": "Lean.BinderInfo.default"}},
 "input_str": "(a b c : Nat) -> c * b * a = b * (a * c)",
 "expr_dbg":
 "forall (a : Nat) (b : Nat) (c : Nat), Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) c b) a) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) b (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) a c))",
 "expr_cse_json": null}